[
  {
    "objectID": "notebooks/00_calc.html",
    "href": "notebooks/00_calc.html",
    "title": "Time of arrival",
    "section": "",
    "text": "from plasmapy.formulary import beta\nimport astropy.units as u\nc1 = beta(1*u.K, 1*u.cm**-3, 1*u.nT)\nc2 = beta(1*u.eV, 1*u.cm**-3, 1*u.nT)\n\nprint(\"Coeficiente for beta at T=1K, n=1cm^-3, B=1nT: \", c1)\nprint(\"Coeficiente for beta at T=1eV, n=1cm^-3, B=1nT: \", c2)\n\nCoeficiente for beta at T=1K, n=1cm^-3, B=1nT:  3.469949406357831e-05\nCoeficiente for beta at T=1eV, n=1cm^-3, B=1nT:  0.402670907669414",
    "crumbs": [
      "Home",
      "Notebooks",
      "Time of arrival"
    ]
  },
  {
    "objectID": "notebooks/00_calc.html#time-of-arrival",
    "href": "notebooks/00_calc.html#time-of-arrival",
    "title": "Time of arrival",
    "section": "Time of arrival",
    "text": "Time of arrival\n\nr = 1 * u.AU\nv_fast = 800*u.km/u.s\nv_slow = 300*u.km/u.s\n\nt_min = r/v_fast\nt_max = r/v_slow\n\n\nprint(f'Fast wind ({v_fast}) to travel 1 AU : {t_min.to(u.day)}')\nprint(f'Slow wind ({v_slow}) to travel 1 AU : {t_max.to(u.day)}')\n\nFast wind (800.0 km / s) to travel 1 AU : 2.1643210460069446 d\nSlow wind (300.0 km / s) to travel 1 AU : 5.771522789351852 d",
    "crumbs": [
      "Home",
      "Notebooks",
      "Time of arrival"
    ]
  },
  {
    "objectID": "notebooks/10_results.html",
    "href": "notebooks/10_results.html",
    "title": "",
    "section": "",
    "text": "import Pkg; \nPkg.add([\"AlgebraOfGraphics\", \"CairoMakie\", \"DataFrames\", \"Arrow\"])\n\n   Resolving package versions...\n  No Changes to `~/.julia/environments/v1.9/Project.toml`\n  No Changes to `~/.julia/environments/v1.9/Manifest.toml`\n\n\n\nusing AlgebraOfGraphics: density\nusing CairoMakie\nusing DataFrames\nusing Arrow\n\nset_aog_theme!()\n\n\nfunction load(path :: String)\n    df = path |&gt; Arrow.Table |&gt; DataFrame |&gt; dropmissing\n\n    # Iterate through each column in the DataFrame\n\n    filter(row -&gt; all(x -&gt; !(x isa Number && isnan(x)), row), df)\nend\n\nbegin\n    path01 = \"../data/psp_ids_dataset.arrow\"\n    path02 = \"../data/psp_ids_dataset_r.arrow\"\n    path03 = \"../data/wind_ids_dataset_r.arrow\"\n\n    psp_ds = load(path01)\n    psp_ds_r = load(path02)\n    wind_df=  load(path03)\nend\n# psp_ds = Dataset(\"../data/psp_ids_dataset.parquet\")\n\n919×59 DataFrame894 rows omitted\n\n\n\nRow\ntime\ntstart\ntstop\nd_tstart\nd_tstop\nd_time\nduration\ncount\nB_std\nB_mean\ndB_vec\nindex_diff\nindex_std\nindex_fluctuation\nb_mag\nb_n\nbn_over_b\nd_star\ndb_mag\ndb_over_b\ndb_over_b_max\nfit.stat.chisqr\nfit.stat.rsquared\nfit.vars.amplitude\nfit.vars.c\nfit.vars.sigma\nrotation_angle\ndB_x\ndB_y\ndB_z\ndB_lmn_x\ndB_lmn_y\ndB_lmn_z\nk_x\nk_y\nk_z\nVl_x\nVl_y\nVl_z\nVn_x\nVn_y\nVn_z\nVX (GSM)\nVY (GSM)\nVZ (GSM)\nplasma_density\nplasma_speed\nv_l\nv_n\nv_k\nv_mn\nL_n\nL_mn\nL_k\nj0\nj0_k\nion_inertial_length\nAlfven_speed\nj_Alfven\n\n\n\nDateTime\nDateTime\nDateTime\nDateTime\nDateTime\nDateTime\nNanoseco…\nUInt32\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\nFloat64\n\n\n\n\n1\n2019-04-09T00:04:00\n2019-04-09T00:03:45\n2019-04-09T00:04:15\n2019-04-09T00:04:04.443\n2019-04-09T00:04:10.975\n2019-04-09T00:04:08.698\n6532000000 nanoseconds\n326\n1.14027\n5.18873\n2.23883\n0.431479\n2.26035\n1.32572\n5.14389\n-2.87895\n-0.559683\n1.40225\n0.0361662\n0.0070309\n0.0421349\n1.59956\n0.986743\n3.47302\n-1.5191\n0.619188\n42.3425\n1.84289\n-2.06591\n2.57028\n-3.7749\n0.0378329\n-0.138808\n-0.845749\n-0.489105\n0.213274\n0.520521\n-0.538262\n0.662821\n-0.792433\n-0.0154468\n0.609763\n-413.968\n-15.4999\n-16.3779\n3.84823\n414.582\n-217.992\n318.295\n354.201\n352.644\n2079.1\n2303.47\n2313.64\n3.1643\n3.15039\n116.089\n57.1793\n35.2542\n\n\n2\n2019-04-09T00:04:15\n2019-04-09T00:04:00\n2019-04-09T00:04:30\n2019-04-09T00:04:01.959\n2019-04-09T00:04:29.743\n2019-04-09T00:04:08.641\n27784000000 nanoseconds\n326\n1.51717\n5.17291\n3.85022\n0.744306\n3.85822\n1.85072\n5.17064\n-4.55401\n-0.880745\n1.35697\n0.00324529\n0.000627639\n0.0562533\n15.1384\n0.975207\n3.50537\n-1.81881\n0.645811\n52.8034\n1.28846\n-2.60697\n3.57157\n-4.52987\n0.832318\n0.00843916\n-0.931023\n-0.357131\n0.0751935\n0.447713\n-0.542256\n0.710994\n0.108923\n0.822289\n0.558549\n-413.968\n-15.4999\n-16.3779\n3.84823\n414.582\n-188.578\n66.984\n389.718\n369.211\n1861.08\n10258.1\n10827.9\n2.92473\n2.77082\n116.089\n57.4766\n35.4375\n\n\n3\n2019-04-09T00:05:15\n2019-04-09T00:05:00\n2019-04-09T00:05:30\n2019-04-09T00:05:01.851\n2019-04-09T00:05:22.183\n2019-04-09T00:05:17.560\n20332000000 nanoseconds\n326\n1.82274\n5.19529\n2.76919\n0.533019\n3.89969\n2.2526\n5.20315\n-4.66775\n-0.897101\n-4.49424\n0.0492907\n0.00947325\n0.0761775\n24.7382\n0.952952\n-3.68393\n1.67977\n0.204925\n52.5474\n-0.593469\n3.09272\n-3.3918\n4.62445\n0.130232\n0.137514\n0.935625\n0.326552\n0.13405\n0.102896\n-0.693543\n0.71303\n-0.0832952\n0.708309\n0.700971\n-408.13\n-21.5688\n3.77595\n4.28721\n408.717\n-24.3436\n21.3647\n388.394\n407.991\n434.387\n8295.28\n7896.82\n-8.76587\n-9.20818\n109.985\n54.797\n37.6393\n\n\n4\n2019-04-09T00:05:30\n2019-04-09T00:05:15\n2019-04-09T00:05:45\n2019-04-09T00:05:16.295\n2019-04-09T00:05:42.331\n2019-04-09T00:05:20.014\n26036000000 nanoseconds\n327\n1.10829\n5.20749\n3.99253\n0.766691\n2.08774\n1.75371\n5.21111\n-4.95135\n-0.950153\n-0.421153\n-0.0253402\n0.00486273\n0.0730544\n128.429\n0.291254\n-1.42379\n0.152751\n0.845175\n50.3995\n0.0424094\n3.33645\n-2.96101\n4.40801\n-0.616022\n0.302029\n0.900349\n0.282394\n0.331096\n0.141573\n-0.759531\n0.634877\n-0.256539\n0.591278\n0.764577\n-408.13\n-21.5688\n3.77595\n4.28721\n408.717\n-39.0009\n94.8351\n372.3\n406.852\n2469.13\n10592.8\n9693.21\n-0.823748\n-0.900196\n109.985\n54.8808\n37.6969\n\n\n5\n2019-04-09T00:40:00\n2019-04-09T00:39:45\n2019-04-09T00:40:15\n2019-04-09T00:39:55.495\n2019-04-09T00:40:14.999\n2019-04-09T00:39:58.707\n19504000000 nanoseconds\n327\n0.74379\n5.17837\n1.71406\n0.331005\n2.11712\n1.98829\n5.20792\n-5.16024\n-0.990844\n-0.275151\n0.0262002\n0.00503083\n0.0330171\n1.8244\n0.973251\n-2.18178\n1.3981\n1.98234\n22.6609\n-1.09384\n0.815944\n-1.5184\n2.02819\n-0.229017\n0.042477\n0.840462\n0.336844\n-0.424453\n0.628427\n-0.3748\n0.681619\n-0.0869083\n0.836949\n0.540336\n-409.77\n-26.0307\n-3.97296\n3.31335\n410.615\n-250.462\n11.6793\n351.477\n325.382\n227.792\n6346.25\n6855.22\n-0.672928\n-0.622966\n125.109\n62.3891\n33.1197\n\n\n6\n2019-04-09T01:01:15\n2019-04-09T01:01:00\n2019-04-09T01:01:30\n2019-04-09T01:01:11.167\n2019-04-09T01:01:29.935\n2019-04-09T01:01:27.254\n18768000000 nanoseconds\n326\n1.37383\n4.97793\n3.72343\n0.747989\n2.08735\n1.98929\n4.99365\n-1.55387\n-0.311168\n-0.282343\n0.0213442\n0.00427426\n0.0604847\n9.22269\n0.978309\n-15.6417\n6.16358\n13.85\n56.268\n-0.706549\n4.01183\n-2.36922\n4.70375\n0.096955\n0.269376\n0.969006\n0.22751\n0.0962685\n0.090587\n-0.863073\n0.49689\n0.860943\n0.318655\n0.396531\n-410.007\n-3.65871\n-13.6508\n4.08915\n410.25\n-40.7665\n359.571\n399.445\n408.22\n6748.43\n7661.47\n7496.79\n-0.550392\n-0.562482\n112.617\n53.8493\n35.2796\n\n\n7\n2019-04-09T01:01:30\n2019-04-09T01:01:15\n2019-04-09T01:01:45\n2019-04-09T01:01:15.031\n2019-04-09T01:01:44.103\n2019-04-09T01:01:22.198\n29072000000 nanoseconds\n326\n1.48875\n4.99831\n4.74735\n0.949791\n3.47153\n3.11483\n5.00042\n-1.61225\n-0.322423\n-0.298913\n-0.0403409\n0.0080675\n0.0604029\n12.2187\n0.982269\n-5.50183\n3.47271\n4.60154\n58.9659\n-0.35236\n4.55503\n-1.80855\n4.89289\n-0.42113\n-0.15995\n0.983452\n0.12727\n0.128938\n0.142318\n-0.939748\n0.310836\n0.8599\n0.272912\n0.431383\n-410.007\n-3.65871\n-13.6508\n4.08915\n410.25\n-59.1564\n359.452\n405.448\n405.963\n10450.0\n11802.2\n11787.2\n-0.585934\n-0.586678\n112.617\n53.9223\n35.3274\n\n\n8\n2019-04-09T01:07:00\n2019-04-09T01:06:45\n2019-04-09T01:07:15\n2019-04-09T01:06:51.659\n2019-04-09T01:07:11.899\n2019-04-09T01:06:54.550\n20240000000 nanoseconds\n326\n0.88094\n5.26358\n1.95465\n0.371354\n2.14359\n1.25724\n5.27705\n-5.05339\n-0.957617\n-0.132713\n0.0422696\n0.00801008\n0.036978\n14.777\n0.828758\n-3.46036\n2.24608\n6.51851\n32.4164\n-1.50122\n2.16313\n-1.30847\n2.8832\n0.573257\n0.0581142\n0.783914\n0.610939\n0.1106\n0.377736\n-0.853267\n0.359514\n-0.512851\n0.130471\n0.848505\n-407.832\n4.6123\n-18.5456\n3.92985\n408.28\n-164.656\n194.023\n318.939\n373.605\n3927.02\n7561.77\n6455.32\n-0.282677\n-0.331128\n114.877\n58.0471\n36.5483\n\n\n9\n2019-04-09T01:11:45\n2019-04-09T01:11:30\n2019-04-09T01:12:00\n2019-04-09T01:11:38.975\n2019-04-09T01:11:52.683\n2019-04-09T01:11:43.789\n13708000000 nanoseconds\n326\n1.32206\n5.30427\n2.67342\n0.504013\n3.85625\n2.60112\n5.27775\n-3.69441\n-0.699998\n0.839731\n-0.0508397\n0.00963284\n0.043528\n5.97219\n0.974918\n3.09189\n-1.72147\n0.9205\n42.6348\n-0.351961\n-3.49107\n1.57081\n-3.83613\n-0.183861\n-0.170858\n-0.973763\n-0.0042036\n-0.227527\n-0.155055\n-0.906196\n0.393404\n0.512542\n0.266641\n0.816213\n-407.655\n2.56545\n-21.0532\n4.28639\n408.207\n52.6018\n225.44\n401.739\n404.803\n3090.33\n5549.04\n5507.04\n1.65077\n1.66336\n109.996\n55.588\n38.1753\n\n\n10\n2019-04-09T01:14:00\n2019-04-09T01:13:45\n2019-04-09T01:14:15\n2019-04-09T01:13:46.855\n2019-04-09T01:14:05.255\n2019-04-09T01:13:51.284\n18400000000 nanoseconds\n326\n0.913099\n5.36257\n1.96865\n0.367109\n2.30659\n1.80057\n5.36295\n-5.08638\n-0.948428\n0.200905\n-0.143059\n0.0266755\n0.0527918\n10.179\n0.921511\n3.58257\n-2.44738\n4.45803\n38.6608\n-0.155925\n-1.83769\n2.98373\n-3.17436\n1.49135\n-0.0579541\n-0.980811\n0.184676\n0.0624873\n0.359252\n-0.607221\n0.708675\n0.307368\n0.793989\n0.524506\n-418.899\n-19.7672\n-2.64698\n4.88235\n419.374\n-140.363\n145.839\n407.045\n395.187\n2683.44\n7271.43\n7489.63\n0.404557\n0.392771\n103.064\n52.9258\n41.4006\n\n\n11\n2019-04-09T01:15:45\n2019-04-09T01:15:30\n2019-04-09T01:16:00\n2019-04-09T01:15:33.667\n2019-04-09T01:15:53.907\n2019-04-09T01:15:46.037\n20240000000 nanoseconds\n326\n1.44672\n5.42802\n2.75265\n0.507118\n5.85729\n3.24283\n5.44668\n-1.33594\n-0.245276\n-0.682873\n-0.121474\n0.0223023\n0.0503267\n5.00727\n0.988003\n-3.22104\n1.567\n1.17922\n42.3793\n0.839207\n3.16071\n-2.13637\n3.89211\n0.287669\n0.164881\n0.974235\n-0.138204\n0.178228\n-0.275658\n-0.76319\n0.584425\n0.917597\n-0.0277718\n0.39654\n-417.139\n-20.1752\n-5.50044\n4.06464\n417.662\n127.171\n384.386\n404.583\n397.831\n7779.97\n8052.1\n8188.76\n-1.36594\n-1.34314\n112.956\n58.9114\n38.3647\n\n\n12\n2019-04-09T01:28:45\n2019-04-09T01:28:30\n2019-04-09T01:29:00\n2019-04-09T01:28:34.654\n2019-04-09T01:28:57.562\n2019-04-09T01:28:37.927\n22908000000 nanoseconds\n326\n0.7953\n5.42125\n1.77123\n0.32672\n2.33203\n1.46993\n5.42331\n-5.36654\n-0.989532\n0.178687\n0.0237363\n0.00437672\n0.0527875\n17.4072\n0.812029\n2.54077\n-1.60958\n3.55478\n36.1254\n0.253765\n-2.91145\n1.66928\n-3.3388\n0.422457\n-0.0365145\n-0.945775\n-0.219641\n-0.239306\n0.19749\n-0.836637\n0.510918\n-0.296018\n0.445958\n0.844686\n-406.099\n-3.31065\n-17.4349\n3.76981\n406.487\n-86.3384\n104.009\n388.978\n397.211\n2382.64\n9099.32\n8910.7\n0.357982\n0.365559\n117.29\n60.9092\n36.7885\n\n\n13\n2019-04-09T02:36:00\n2019-04-09T02:35:45\n2019-04-09T02:36:15\n2019-04-09T02:35:48.302\n2019-04-09T02:36:11.670\n2019-04-09T02:35:51.640\n23368000000 nanoseconds\n326\n1.28016\n5.21487\n3.80097\n0.728872\n2.75957\n3.27063\n5.2251\n-5.04386\n-0.965313\n-0.104647\n0.0690014\n0.0132057\n0.118112\n89.1289\n0.589574\n-155.348\n78.1814\n371.122\n47.9702\n3.28582\n0.538354\n-2.587\n4.2066\n-0.245463\n0.152541\n0.62456\n-0.0777032\n0.777101\n-0.742364\n-0.174991\n0.646741\n0.00951\n0.96244\n0.271327\n-421.356\n-25.1649\n10.2809\n3.93543\n422.232\n323.852\n25.4373\n253.218\n270.924\n594.42\n6330.94\n5917.19\n-0.307377\n-0.328871\n114.796\n57.435\n36.2142\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n908\n2019-04-13T22:50:30\n2019-04-13T22:50:15\n2019-04-13T22:50:45\n2019-04-13T22:50:15.320\n2019-04-13T22:50:41.356\n2019-04-13T22:50:37.637\n26036000000 nanoseconds\n326\n1.01503\n1.80768\n2.89768\n1.60298\n5.77682\n5.15605\n1.76263\n-0.480665\n-0.272698\n-0.374006\n0.434107\n0.246284\n0.431645\n22.5879\n0.881079\n-3.03133\n0.765567\n2.02626\n95.5625\n-1.75484\n-1.01203\n-2.1559\n2.9553\n-0.132623\n0.0144888\n-0.569162\n0.818412\n0.0791\n0.610305\n0.371836\n0.699475\n-0.738262\n0.587131\n0.332033\n-383.815\n9.64335\n-10.2968\n4.99222\n384.075\n-237.861\n285.6\n225.531\n301.555\n7435.87\n7851.28\n5871.92\n-0.986967\n-1.31966\n101.924\n17.2025\n13.7593\n\n\n909\n2019-04-13T22:54:45\n2019-04-13T22:54:30\n2019-04-13T22:55:00\n2019-04-13T22:54:30.712\n2019-04-13T22:54:52.148\n2019-04-13T22:54:49.086\n21436000000 nanoseconds\n326\n0.662099\n1.65586\n0.890118\n0.537556\n2.64679\n1.08604\n1.6388\n-0.329202\n-0.20088\n-0.261941\n0.317638\n0.193823\n0.291245\n3.84555\n0.949355\n-2.33854\n0.570396\n2.23194\n74.6342\n1.22198\n1.8307\n-0.323073\n2.20296\n0.190003\n0.244856\n0.793495\n-0.568146\n-0.21812\n-0.497709\n-0.867035\n0.0231721\n-0.790212\n0.4643\n0.399989\n-388.908\n3.1843\n-16.611\n4.79052\n389.276\n190.417\n302.154\n306.783\n339.525\n6476.98\n7278.05\n6576.2\n-0.613935\n-0.679458\n104.047\n16.3273\n12.5316\n\n\n910\n2019-04-13T22:59:30\n2019-04-13T22:59:15\n2019-04-13T22:59:45\n2019-04-13T22:59:15.820\n2019-04-13T22:59:32.196\n2019-04-13T22:59:29.857\n16376000000 nanoseconds\n326\n0.855124\n1.53484\n2.11103\n1.37541\n2.99205\n2.12301\n1.57593\n-0.0698885\n-0.0443476\n0.173279\n0.107009\n0.0679025\n0.345754\n14.3952\n0.831301\n4.04899\n-1.4702\n5.84173\n92.9513\n1.85643\n1.34828\n0.871828\n-2.45397\n0.000412598\n0.0481219\n0.644767\n-0.717711\n-0.262994\n0.743442\n0.562629\n0.361584\n-0.666404\n0.668904\n0.329351\n-391.733\n2.52301\n-22.7199\n4.89924\n392.4\n-298.027\n255.258\n248.412\n255.26\n4180.1\n4180.14\n4068.0\n0.540198\n0.555089\n102.886\n15.5256\n12.1868\n\n\n911\n2019-04-13T23:01:00\n2019-04-13T23:00:45\n2019-04-13T23:01:15\n2019-04-13T23:00:46.348\n2019-04-13T23:01:11.188\n2019-04-13T23:01:04.754\n24840000000 nanoseconds\n326\n0.399416\n1.33808\n0.929372\n0.694555\n2.16761\n1.56236\n1.31915\n0.00120239\n0.000911488\n-0.336375\n0.119827\n0.0908367\n0.60222\n4.42525\n0.817065\n-0.649295\n-0.0950176\n0.482567\n48.9046\n-1.00311\n0.195316\n-0.81089\n1.28284\n0.210004\n0.110152\n-0.399228\n0.646935\n0.649687\n0.707212\n-0.321314\n0.629768\n-0.325871\n0.642354\n0.693679\n-390.679\n8.25593\n-25.1954\n5.05654\n391.577\n-294.813\n115.136\n144.942\n257.717\n2859.99\n6401.7\n3600.35\n-1.03865\n-1.8468\n101.273\n12.7922\n10.3636\n\n\n912\n2019-04-13T23:04:30\n2019-04-13T23:04:15\n2019-04-13T23:04:45\n2019-04-13T23:04:15.648\n2019-04-13T23:04:44.812\n2019-04-13T23:04:35.249\n29164000000 nanoseconds\n327\n0.62153\n2.18765\n1.95061\n0.89165\n3.70349\n3.52447\n2.18983\n-0.146511\n-0.0669052\n0.17311\n0.403837\n0.184414\n0.358466\n8.30682\n0.924918\n1.46913\n-0.0264757\n2.12167\n55.1247\n1.53186\n-0.183301\n1.32682\n-2.03317\n0.0636953\n-0.0527982\n0.398953\n-0.725469\n-0.560831\n0.778877\n-0.0828598\n0.621679\n-0.436408\n0.640309\n0.632101\n-388.464\n7.15077\n-18.0957\n4.58954\n388.951\n-314.408\n162.669\n150.018\n228.977\n4744.08\n6677.88\n4375.12\n0.601619\n0.918268\n106.301\n22.2897\n16.3902\n\n\n913\n2019-04-13T23:07:45\n2019-04-13T23:07:30\n2019-04-13T23:08:00\n2019-04-13T23:07:30.136\n2019-04-13T23:07:59.760\n2019-04-13T23:07:34.368\n29624000000 nanoseconds\n326\n0.286617\n2.72864\n0.915778\n0.335617\n2.00942\n2.24856\n2.72947\n-0.225904\n-0.0827649\n0.0713249\n0.903608\n0.331056\n0.331225\n2.985\n0.870289\n1.10794\n1.63814\n3.88343\n9.24863\n0.656685\n0.597062\n0.435015\n-0.984395\n-0.00806845\n-0.088638\n0.499969\n-0.79692\n0.339041\n0.645192\n0.664868\n0.376402\n0.306939\n-0.676716\n0.669211\n-380.221\n14.8103\n-13.1484\n4.67357\n380.737\n-240.418\n135.526\n206.359\n295.228\n4014.83\n8745.84\n6113.19\n0.192253\n0.275047\n105.341\n27.5316\n20.6153\n\n\n914\n2019-04-13T23:14:15\n2019-04-13T23:14:00\n2019-04-13T23:14:30\n2019-04-13T23:14:08.864\n2019-04-13T23:14:29.840\n2019-04-13T23:14:18.203\n20976000000 nanoseconds\n326\n0.693524\n1.96553\n1.35821\n0.691014\n2.11571\n1.31878\n2.03682\n1.30126\n0.638868\n-0.586286\n0.421062\n0.206725\n0.389629\n2.53438\n0.976784\n-1.4635\n0.0217798\n0.624054\n57.7776\n1.29704\n-1.30615\n-0.673743\n1.94713\n-0.174231\n0.143526\n-0.25711\n0.228972\n-0.938864\n-0.732132\n0.576884\n0.3622\n0.650628\n0.434834\n0.622577\n-384.119\n7.16473\n-14.7545\n4.69847\n384.469\n280.015\n255.989\n114.254\n263.454\n5369.63\n5526.22\n2396.59\n-1.7709\n-4.08346\n105.061\n20.4905\n15.4248\n\n\n915\n2019-04-13T23:17:00\n2019-04-13T23:16:45\n2019-04-13T23:17:15\n2019-04-13T23:16:55.752\n2019-04-13T23:17:13.600\n2019-04-13T23:16:58.302\n17848000000 nanoseconds\n326\n0.93631\n1.92486\n1.94584\n1.0109\n2.39257\n2.20133\n2.04915\n-1.59064\n-0.776247\n1.37555\n0.253505\n0.123712\n0.247572\n5.64029\n0.920058\n1.7739\n-0.505163\n0.3224\n76.8698\n0.162953\n1.27577\n2.17053\n-2.51863\n0.147756\n0.000813785\n0.497267\n-0.763758\n0.411581\n0.0473291\n0.553626\n0.831419\n-0.955604\n-0.217247\n0.199059\n-382.299\n8.2531\n-19.7468\n4.09699\n382.898\n-29.9426\n359.603\n204.535\n381.725\n6418.19\n6813.03\n3650.55\n2.86757\n5.35176\n112.509\n22.0759\n14.4908\n\n\n916\n2019-04-13T23:20:00\n2019-04-13T23:19:45\n2019-04-13T23:20:15\n2019-04-13T23:20:04.904\n2019-04-13T23:20:11.068\n2019-04-13T23:20:07.059\n6164000000 nanoseconds\n326\n0.741578\n1.3224\n1.2691\n0.9597\n3.86314\n2.05728\n1.21873\n-0.674169\n-0.553175\n-1.40005\n-0.287007\n0.235497\n0.512868\n1.66479\n0.947649\n-1.55304\n1.1016\n0.277319\n90.5143\n-1.40742\n-0.376169\n-1.42266\n2.03242\n0.124752\n-0.00263216\n-0.720019\n0.0931615\n0.687672\n0.7246\n0.139119\n0.674982\n-0.437565\n-0.663807\n0.606545\n-383.639\n5.26555\n-8.51398\n4.67164\n383.77\n-282.999\n159.208\n270.864\n259.212\n981.356\n1597.78\n1669.6\n-4.29811\n-4.11322\n105.363\n12.2956\n9.20299\n\n\n917\n2019-04-13T23:35:30\n2019-04-13T23:35:15\n2019-04-13T23:35:45\n2019-04-13T23:35:19.383\n2019-04-13T23:35:30.055\n2019-04-13T23:35:25.880\n10672000000 nanoseconds\n326\n0.869069\n1.3671\n1.14107\n0.834663\n2.43493\n1.20937\n1.46837\n-0.294836\n-0.200792\n-0.735128\n-0.126245\n0.0859767\n0.377688\n0.515043\n0.994557\n-2.17577\n1.02149\n0.739928\n92.8988\n0.00715236\n-1.62732\n-1.79593\n2.40628\n-0.288147\n0.0186104\n-0.988993\n0.107666\n-0.101497\n-0.0596777\n0.588936\n0.805974\n0.907907\n-0.303571\n0.289049\n-383.457\n10.0094\n-13.8084\n4.49961\n383.836\n17.6495\n355.173\n381.716\n383.43\n3790.41\n4091.97\n4073.67\n-1.52569\n-1.53254\n107.358\n15.0947\n10.882\n\n\n918\n2019-04-13T23:54:30\n2019-04-13T23:54:15\n2019-04-13T23:54:45\n2019-04-13T23:54:33.891\n2019-04-13T23:54:43.827\n2019-04-13T23:54:42.135\n9936000000 nanoseconds\n326\n0.44966\n1.93882\n1.32774\n0.684817\n2.28156\n2.3921\n1.83591\n-1.08202\n-0.589364\n-0.287323\n-0.048727\n0.026541\n0.188396\n0.409346\n0.98556\n-2.44361\n0.698331\n2.12619\n54.4255\n1.54454\n-0.700641\n-0.472648\n1.75402\n-0.152682\n0.00507537\n-0.218066\n0.167831\n-0.961395\n-0.914401\n0.346698\n0.208979\n-0.101239\n-0.695688\n0.711174\n-386.307\n13.215\n-13.8639\n4.35758\n386.782\n354.924\n20.0561\n99.787\n153.718\n199.278\n1527.34\n991.483\n-1.48743\n-2.29133\n109.093\n19.1782\n13.3895\n\n\n919\n2019-04-13T23:54:45\n2019-04-13T23:54:30\n2019-04-13T23:55:00\n2019-04-13T23:54:33.891\n2019-04-13T23:54:49.071\n2019-04-13T23:54:40.634\n15180000000 nanoseconds\n326\n0.670058\n1.90252\n1.25421\n0.659236\n2.12338\n1.48276\n1.84663\n-1.24432\n-0.673832\n-0.30455\n0.0252603\n0.0136791\n0.187302\n0.998067\n0.983698\n-1.46777\n0.687919\n1.20487\n54.7997\n1.61572\n-0.668496\n-0.449802\n1.80497\n0.027653\n0.0325816\n-0.198629\n0.169444\n-0.965316\n-0.885535\n0.392001\n0.249325\n-0.163435\n-0.765235\n0.622659\n-386.307\n13.215\n-13.8639\n4.35758\n386.782\n343.812\n44.3913\n92.354\n177.181\n673.86\n2689.61\n1401.93\n-1.36783\n-2.62418\n109.093\n19.2902\n13.4676\n\n\n\n\n\n\n\nbegin\n    data_layer = (data(psp_ds) + data(psp_ds_r) * visual(color=:blue) + data(wind_df) * visual(color=:green, alpha=0.2))\n    plt = data_layer * mapping(:L_k =&gt; (l -&gt; abs(l)), :j0_k =&gt; (j -&gt; abs(j))) * visual(Scatter)\n    draw(plt, axis=(yscale=log10, xscale=log10))\nend\n\n\n\n\n\n# plot the density distribution of the thickness and current density\nbegin\n    mapping_layer_j = mapping(:j0_k =&gt; (j -&gt; log10(abs(j))) =&gt; \"Log Current Intensity\")\n    draw(data_layer * mapping_layer_j * density())\nend\n\n\n\n\n\nbegin\n    mapping_layer_l = mapping(:L_k =&gt; (l -&gt; log10(abs(l))) =&gt; \"Log Thickness\")\n    draw(data_layer * mapping_layer_l * density())\nend",
    "crumbs": [
      "Home",
      "Notebooks",
      "10 Results"
    ]
  },
  {
    "objectID": "notebooks/01_cor.html",
    "href": "notebooks/01_cor.html",
    "title": "",
    "section": "",
    "text": "using Pkg\nPkg.activate(\".\")\nPkg.add([\"PythonCall\", \"CondaPkg\"])\nusing PythonCall\nusing CondaPkg\nCondaPkg.add(\"pytables\")\nCondaPkg.add_pip(\"pyspedas\")\npyspedas = pyimport(\"pyspedas\")",
    "crumbs": [
      "Home",
      "Notebooks",
      "01 Cor"
    ]
  },
  {
    "objectID": "notebooks/01_psp_cor.html",
    "href": "notebooks/01_psp_cor.html",
    "title": "Estimate of arrival time",
    "section": "",
    "text": "import pyspedas\nfrom pytplot import tplot, get_data\nfrom pyspedas import tinterp\nfrom pyspedas.analysis.tvectot import tvectot\nimport matplotlib.pyplot as plt\n\nimport xarray as xr\nimport polars as pl\nimport polars.selectors as cs\n\nimport hvplot.polars\n\nimport scipy.stats\nimport dcor\n\nimport astropy.units as u\nfrom datetimerange import DateTimeRange\nfrom sunpy.time import TimeRange\nfrom numpy import timedelta64\nfrom datetime import datetime, timedelta\nstart = '2019-04-06T12:00'\nend = '2019-04-07T12:00'\n\nearth_start = '2019-04-09'\nearth_end = '2019-04-14'\npsp_timerange = TimeRange(start, end)\n\ntimerange_earth = TimeRange(earth_start, earth_end)\ndef validate(timerange):\n    if isinstance(timerange, DateTimeRange):\n        return [timerange.get_start_time_str(), timerange.get_end_time_str()]\n    if isinstance(timerange, TimeRange):\n        return [timerange.start.to_string(), timerange.end.to_string()]",
    "crumbs": [
      "Home",
      "Notebooks",
      "Estimate of arrival time"
    ]
  },
  {
    "objectID": "notebooks/01_psp_cor.html#estimate-of-arrival-time",
    "href": "notebooks/01_psp_cor.html#estimate-of-arrival-time",
    "title": "Estimate of arrival time",
    "section": "Estimate of arrival time",
    "text": "Estimate of arrival time\n\npsp_spi_vars = pyspedas.psp.spi(trange=validate(psp_timerange), time_clip=True)\n\ntvar = tvectot(\"psp_spi_VEL_RTN_SUN\")\npsp_ion_speed: xr.DataArray = get_data(tvar, xarray=True)\n\nr_psp = get_data('psp_spi_SUN_DIST', xarray=True)\n# r_psp = pl.DataFrame(r_psp.to_dataframe().reset_index())\n\n29-Jan-24 15:33:27: Downloading remote index: https://spdf.gsfc.nasa.gov/pub/data/psp/sweap/spi/l3/spi_sf00_l3_mom/2019/\n29-Jan-24 15:33:28: File is current: /Users/zijin/data/psp/sweap/spi/l3/spi_sf00_l3_mom/2019/psp_swp_spi_sf00_l3_mom_20190406_v04.cdf\n29-Jan-24 15:33:28: File is current: /Users/zijin/data/psp/sweap/spi/l3/spi_sf00_l3_mom/2019/psp_swp_spi_sf00_l3_mom_20190407_v04.cdf\n\n\nUsing LEVEL=L3\n\n\n\ndf_info = pl.DataFrame(r_psp.to_dataframe().join(psp_ion_speed.to_dataframe()).reset_index())\n\n\nkm2au = u.km.to(u.AU)\nr_earth = 1 * u.AU.to(u.km)\nv_sw_slow = 250 * u.km / u.s\nv_sw_fast = 500 * u.km / u.s\n\ndf_info.sort('time').group_by_dynamic('time', every='1h').agg(cs.float().mean()).with_columns(\n    distance2sun = pl.col('psp_spi_SUN_DIST'),\n    distance2earth = r_earth - pl.col('psp_spi_SUN_DIST')\n).with_columns(\n    dt2arrival = pl.duration(seconds = pl.col('distance2earth') / pl.col('psp_spi_VEL_RTN_SUN_tot')),\n    dt2arrival_slow = pl.duration(seconds = pl.col('distance2earth') / v_sw_slow),\n    dt2arrival_fast = pl.duration(seconds = pl.col('distance2earth') / v_sw_fast)\n).with_columns(\n    time2arrival = pl.col('time') + pl.col('dt2arrival'),\n    time2arrival_slow = pl.col('time') + pl.col('dt2arrival_slow'),\n    time2arrival_fast = pl.col('time') + pl.col('dt2arrival_fast')\n).with_columns(\n    distance2sun = pl.col('distance2sun') * km2au,\n    distance2earth = pl.col('distance2earth') * km2au\n)\n\n\nshape: (24, 11)\n\n\n\ntime\npsp_spi_SUN_DIST\npsp_spi_VEL_RTN_SUN_tot\ndistance2sun\ndistance2earth\ndt2arrival\ndt2arrival_slow\ndt2arrival_fast\ntime2arrival\ntime2arrival_slow\ntime2arrival_fast\n\n\ndatetime[ns]\nf64\nf32\nf64\nf64\nduration[μs]\nduration[μs]\nduration[μs]\ndatetime[μs]\ndatetime[μs]\ndatetime[μs]\n\n\n\n\n2019-04-06 12:00:00\n2.6162e7\n289.611786\n0.174885\n0.825115\n4d 22h 23m 30s\n5d 17h 9m 1s\n2d 20h 34m 30s\n2019-04-11 10:23:30\n2019-04-12 05:09:01\n2019-04-09 08:34:30\n\n\n2019-04-06 13:00:00\n2.6231e7\n273.515167\n0.175347\n0.824653\n5d 5h 17m 20s\n5d 17h 4m 25s\n2d 20h 32m 12s\n2019-04-11 18:17:20\n2019-04-12 06:04:25\n2019-04-09 09:32:12\n\n\n2019-04-06 14:00:00\n2.6302e7\n255.006729\n0.175819\n0.824181\n5d 14h 18m 20s\n5d 16h 59m 43s\n2d 20h 29m 51s\n2019-04-12 04:18:20\n2019-04-12 06:59:43\n2019-04-09 10:29:51\n\n\n2019-04-06 15:00:00\n2.6374e7\n243.91748\n0.1763\n0.8237\n5d 20h 19m 46s\n5d 16h 54m 55s\n2d 20h 27m 27s\n2019-04-12 11:19:46\n2019-04-12 07:54:55\n2019-04-09 11:27:27\n\n\n2019-04-06 16:00:00\n2.6448e7\n244.805847\n0.176796\n0.823204\n5d 19h 44m 9s\n5d 16h 49m 58s\n2d 20h 24m 59s\n2019-04-12 11:44:09\n2019-04-12 08:49:58\n2019-04-09 12:24:59\n\n\n2019-04-06 17:00:00\n2.6523e7\n232.988617\n0.177294\n0.822706\n6d 2h 44m 4s\n5d 16h 45m\n2d 20h 22m 30s\n2019-04-12 19:44:04\n2019-04-12 09:45:00\n2019-04-09 13:22:30\n\n\n2019-04-06 18:00:00\n2.6599e7\n224.188614\n0.177805\n0.822195\n6d 8h 23m 58s\n5d 16h 39m 54s\n2d 20h 19m 57s\n2019-04-13 02:23:58\n2019-04-12 10:39:54\n2019-04-09 14:19:57\n\n\n2019-04-06 19:00:00\n2.6677e7\n222.26709\n0.178326\n0.821674\n6d 9h 37m 11s\n5d 16h 34m 42s\n2d 20h 17m 21s\n2019-04-13 04:37:11\n2019-04-12 11:34:42\n2019-04-09 15:17:21\n\n\n2019-04-06 20:00:00\n2.6757e7\n234.130203\n0.178857\n0.821143\n6d 1h 44m 30s\n5d 16h 29m 25s\n2d 20h 14m 42s\n2019-04-12 21:44:30\n2019-04-12 12:29:25\n2019-04-09 16:14:42\n\n\n2019-04-06 21:00:00\n2.6837e7\n237.631592\n0.179396\n0.820604\n5d 23h 30m\n5d 16h 24m 2s\n2d 20h 12m 1s\n2019-04-12 20:30:00\n2019-04-12 13:24:02\n2019-04-09 17:12:01\n\n\n2019-04-06 22:00:00\n2.6919e7\n307.80896\n0.179945\n0.820055\n4d 14h 42m 34s\n5d 16h 18m 34s\n2d 20h 9m 17s\n2019-04-11 12:42:34\n2019-04-12 14:18:34\n2019-04-09 18:09:17\n\n\n2019-04-06 23:00:00\n2.7003e7\n344.912201\n0.180502\n0.819498\n4d 2h 43m 58s\n5d 16h 13m\n2d 20h 6m 30s\n2019-04-11 01:43:58\n2019-04-12 15:13:00\n2019-04-09 19:06:30\n\n\n2019-04-07 00:00:00\n2.7087e7\n355.850494\n0.181069\n0.818931\n3d 23h 37m 54s\n5d 16h 7m 21s\n2d 20h 3m 40s\n2019-04-10 23:37:54\n2019-04-12 16:07:21\n2019-04-09 20:03:40\n\n\n2019-04-07 01:00:00\n2.7174e7\n392.575317\n0.181644\n0.818356\n3d 14h 37m 29s\n5d 16h 1m 37s\n2d 20h 48s\n2019-04-10 15:37:29\n2019-04-12 17:01:37\n2019-04-09 21:00:48\n\n\n2019-04-07 02:00:00\n2.7261e7\n362.412781\n0.182228\n0.817772\n3d 21h 46m 2s\n5d 15h 55m 47s\n2d 19h 57m 53s\n2019-04-10 23:46:02\n2019-04-12 17:55:47\n2019-04-09 21:57:53\n\n\n2019-04-07 03:00:00\n2.7349e7\n379.650299\n0.182819\n0.817181\n3d 17h 26m 42s\n5d 15h 49m 53s\n2d 19h 54m 56s\n2019-04-10 20:26:42\n2019-04-12 18:49:53\n2019-04-09 22:54:56\n\n\n2019-04-07 04:00:00\n2.7440e7\n395.427307\n0.183425\n0.816575\n3d 13h 48m 46s\n5d 15h 43m 51s\n2d 19h 51m 55s\n2019-04-10 17:48:46\n2019-04-12 19:43:51\n2019-04-09 23:51:55\n\n\n2019-04-07 05:00:00\n2.7530e7\n390.717957\n0.184029\n0.815971\n3d 14h 46m 58s\n5d 15h 37m 49s\n2d 19h 48m 54s\n2019-04-10 19:46:58\n2019-04-12 20:37:49\n2019-04-10 00:48:54\n\n\n2019-04-07 06:00:00\n2.7623e7\n403.930115\n0.184646\n0.815354\n3d 11h 52m 51s\n5d 15h 31m 40s\n2d 19h 45m 50s\n2019-04-10 17:52:51\n2019-04-12 21:31:40\n2019-04-10 01:45:50\n\n\n2019-04-07 07:00:00\n2.7716e7\n413.059479\n0.185271\n0.814729\n3d 9h 57m 50s\n5d 15h 25m 26s\n2d 19h 42m 43s\n2019-04-10 16:57:50\n2019-04-12 22:25:26\n2019-04-10 02:42:43\n\n\n2019-04-07 08:00:00\n2.7811e7\n388.398651\n0.185904\n0.814096\n3d 15h 6m 2s\n5d 15h 19m 8s\n2d 19h 39m 34s\n2019-04-10 23:06:02\n2019-04-12 23:19:08\n2019-04-10 03:39:34\n\n\n2019-04-07 09:00:00\n2.7907e7\n369.630157\n0.186544\n0.813456\n3d 19h 27m 4s\n5d 15h 12m 45s\n2d 19h 36m 22s\n2019-04-11 04:27:04\n2019-04-13 00:12:45\n2019-04-10 04:36:22\n\n\n2019-04-07 10:00:00\n2.8003e7\n330.248749\n0.187192\n0.812808\n4d 6h 16m 30s\n5d 15h 6m 17s\n2d 19h 33m 8s\n2019-04-11 16:16:30\n2019-04-13 01:06:17\n2019-04-10 05:33:08\n\n\n2019-04-07 11:00:00\n2.8102e7\n299.601105\n0.187847\n0.812153\n4d 16h 38m 47s\n5d 14h 59m 45s\n2d 19h 29m 52s\n2019-04-12 03:38:47\n2019-04-13 01:59:45\n2019-04-10 06:29:52",
    "crumbs": [
      "Home",
      "Notebooks",
      "Estimate of arrival time"
    ]
  },
  {
    "objectID": "notebooks/01_psp_cor.html#get-velocity",
    "href": "notebooks/01_psp_cor.html#get-velocity",
    "title": "Estimate of arrival time",
    "section": "Get velocity",
    "text": "Get velocity\n\npsp_spi_vars = pyspedas.psp.spi(trange=validate(psp_timerange), time_clip=True)\nswe_vars = pyspedas.ace.swe(trange=validate(timerange_earth), datatype = 'h0')\n\n29-Jan-24 14:35:31: Downloading remote index: https://spdf.gsfc.nasa.gov/pub/data/psp/sweap/spi/l3/spi_sf00_l3_mom/2019/\n29-Jan-24 14:35:31: File is current: /Users/zijin/data/psp/sweap/spi/l3/spi_sf00_l3_mom/2019/psp_swp_spi_sf00_l3_mom_20190406_v04.cdf\n29-Jan-24 14:35:31: File is current: /Users/zijin/data/psp/sweap/spi/l3/spi_sf00_l3_mom/2019/psp_swp_spi_sf00_l3_mom_20190407_v04.cdf\n29-Jan-24 14:35:32: Downloading remote index: https://spdf.gsfc.nasa.gov/pub/data/ace/swepam/level_2_cdaweb/swe_h0/2019/\n29-Jan-24 14:35:32: File is current: /Users/zijin/data/ace/swepam/level_2_cdaweb/swe_h0/2019/ac_h0_swe_20190409_v11.cdf\n29-Jan-24 14:35:33: File is current: /Users/zijin/data/ace/swepam/level_2_cdaweb/swe_h0/2019/ac_h0_swe_20190410_v11.cdf\n29-Jan-24 14:35:33: File is current: /Users/zijin/data/ace/swepam/level_2_cdaweb/swe_h0/2019/ac_h0_swe_20190411_v11.cdf\n29-Jan-24 14:35:33: File is current: /Users/zijin/data/ace/swepam/level_2_cdaweb/swe_h0/2019/ac_h0_swe_20190412_v11.cdf\n29-Jan-24 14:35:33: File is current: /Users/zijin/data/ace/swepam/level_2_cdaweb/swe_h0/2019/ac_h0_swe_20190413_v11.cdf\n\n\nUsing LEVEL=L3\n\n\n\ntvar = tvectot(\"psp_spi_VEL_RTN_SUN\")\npsp_ion_speed: xr.DataArray = get_data(tvar, xarray=True)\n\nace_ion_speed: xr.DataArray = get_data(\"Vp\", xarray=True)\n\n\ndef calc_correlation(\n    v1: xr.DataArray,\n    v2: xr.DataArray,\n    v1_timerange: TimeRange,\n    v2_timerange: TimeRange,\n    cadence: timedelta = timedelta(minutes=10),\n    window: timedelta = timedelta(hours=1),\n):\n    v1 = v1.dropna(\"time\").sel(time=slice(v1_timerange.start.to_datetime(), v1_timerange.end.to_datetime()))\n    v2 = v2.dropna(\"time\").sel(time=slice(v2_timerange.start.to_datetime(), v2_timerange.end.to_datetime()))\n    v1_start = v1_timerange.start.to_datetime()\n    v1_end = v1_timerange.end.to_datetime()\n    \n    results = []\n    for temp_tr in v2_timerange.window(cadence=cadence, window=window):\n        v2_temp_start = temp_tr.start.to_datetime()\n        v2_temp_end = temp_tr.end.to_datetime()\n        \n        v2_temp = v2.sel(time = slice(v2_temp_start, v2_temp_end))\n        v2_temp[\"time\"] = v2_temp[\"time\"] - timedelta64(v2_temp_start - v1_start)\n        v1_temp = v1.interp_like(v2_temp)\n\n        pearsonr = scipy.stats.pearsonr(v1_temp, v2_temp).statistic\n        distance_correlation = dcor.distance_correlation(v1_temp, v2_temp)\n        results.append([v1_start, v1_end, v2_temp_start, v2_temp_end, pearsonr, distance_correlation])\n\n    return pl.DataFrame(results, schema=[\"v1_start\", \"v1_end\", \"v2_start\", \"v2_end\", \"Pearson correlation\", \"Distance correlation\"])\n\n29-Jan-24 14:35:35: /Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/dcor/_fast_dcov_avl.py:554: UserWarning: Falling back to uncompiled AVL fast distance covariance terms because of TypeError exception raised: No matching definition for argument type(s) array(float64, 1d, C), array(float32, 1d, C), bool. Rembember: only floating point values can be used in the compiled implementations.\n  warnings.warn(\n\n\n\n\n\nwindow = (psp_timerange.end - psp_timerange.start)\ncadence = timedelta(minutes=10)\n\ndf = calc_correlation(\n    psp_ion_speed,\n    ace_ion_speed,\n    psp_timerange,\n    timerange_earth,\n    cadence = cadence,\n    window = window,\n)\n\n\ndf\n\n\nshape: (578, 6)\n\n\n\nv1_start\nv1_end\nv2_start\nv2_end\nPearson correlation\nDistance correlation\n\n\ndatetime[μs]\ndatetime[μs]\ndatetime[μs]\ndatetime[μs]\nf64\nf64\n\n\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-09 00:00:00\n2019-04-10 00:00:00\n0.129733\n0.295187\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-09 00:10:00\n2019-04-10 00:10:00\n0.115776\n0.290461\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-09 00:20:00\n2019-04-10 00:20:00\n0.125829\n0.295799\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-09 00:30:00\n2019-04-10 00:30:00\n0.134056\n0.299338\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-09 00:40:00\n2019-04-10 00:40:00\n0.141806\n0.309491\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-09 00:50:00\n2019-04-10 00:50:00\n0.137222\n0.310114\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-09 01:00:00\n2019-04-10 01:00:00\n0.130128\n0.307473\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-09 01:10:00\n2019-04-10 01:10:00\n0.132468\n0.314047\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-09 01:20:00\n2019-04-10 01:20:00\n0.137969\n0.310688\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-09 01:30:00\n2019-04-10 01:30:00\n0.153246\n0.316048\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-09 01:40:00\n2019-04-10 01:40:00\n0.169566\n0.320866\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-09 01:50:00\n2019-04-10 01:50:00\n0.167484\n0.325138\n\n\n…\n…\n…\n…\n…\n…\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-12 22:20:00\n2019-04-13 22:20:00\n-0.75871\n0.797919\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-12 22:30:00\n2019-04-13 22:30:00\n-0.769157\n0.807681\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-12 22:40:00\n2019-04-13 22:40:00\n-0.772618\n0.81499\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-12 22:50:00\n2019-04-13 22:50:00\n-0.78226\n0.825125\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-12 23:00:00\n2019-04-13 23:00:00\n-0.788294\n0.830554\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-12 23:10:00\n2019-04-13 23:10:00\n-0.783344\n0.829585\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-12 23:20:00\n2019-04-13 23:20:00\n-0.788571\n0.834751\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-12 23:30:00\n2019-04-13 23:30:00\n-0.787044\n0.837541\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-12 23:40:00\n2019-04-13 23:40:00\n-0.788278\n0.841798\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-12 23:50:00\n2019-04-13 23:50:00\n-0.785141\n0.839557\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-13 00:00:00\n2019-04-14 00:00:00\n-0.777335\n0.835922\n\n\n2019-04-06 12:00:00\n2019-04-07 12:00:00\n2019-04-13 00:10:00\n2019-04-14 00:10:00\n-0.779654\n0.840022\n\n\n\n\n\n\n\ndf.hvplot('v2_start', ['Pearson correlation', 'Distance correlation'])",
    "crumbs": [
      "Home",
      "Notebooks",
      "Estimate of arrival time"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Evolution of solar wind discontinuities in the inner heliosphere",
    "section": "",
    "text": "Given timeseries \\((R_a, \\phi_a\\), \\(R_b(t)\\),"
  },
  {
    "objectID": "index.html#psp-earth",
    "href": "index.html#psp-earth",
    "title": "Evolution of solar wind discontinuities in the inner heliosphere",
    "section": "2018-10-24 PSP Earth",
    "text": "2018-10-24 PSP Earth\nfile:/Users/zijin/projects/psp_conjunction/files/psp_v.vap?timerange=2018-10-23+through+2018-10-25\nPSP plasma data is very sparse (6 data point/day)"
  },
  {
    "objectID": "index.html#section",
    "href": "index.html#section",
    "title": "Evolution of solar wind discontinuities in the inner heliosphere",
    "section": "2019-04-07",
    "text": "2019-04-07\nfile:///Users/zijin/projects/autoplot/psp_mag_sw.vap?timerange=2019-04-01+through+2019-04-15\nfile:///Users/zijin/projects/autoplot/psp_mag_sw.vap?timerange=2019-04-06+through+2019-04-08\nfile:///Users/zijin/projects/autoplot/ace.vap?timerange=2019-04-08+through+2019-04-10\nfile:///Users/zijin/projects/autoplot/ace.vap?timerange=2019-04-11+through+2019-04-14\nfile:///Users/zijin/projects/autoplot/wind_plasma.vap?timerange=2019-04-08+through+2019-04-10\nfile:///Users/zijin/projects/autoplot/dscovr.vap?timerange=2019-04-08+through+2019-04-10\nENLIL Solar Wind Prediction - Parker Solar Probe - Perihelion 02\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPSP Observation Overvall\n\n\n\n\n\n\n\n\n\n\n\nPSP observation\n\n\n\n\n\n\n\nACE observation\n\n\n\n\n\n\n\nACE observation (continued)\n\n\n\n\n\nSummary plot"
  },
  {
    "objectID": "index.html#trange",
    "href": "index.html#trange",
    "title": "Evolution of solar wind discontinuities in the inner heliosphere",
    "section": "Trange",
    "text": "Trange\n\nC4, 18 September, b 2021. This will be an inferior triple SO–PSP–STEREO-A conjunction, with SO inside the orbit of Venus around 0.6 AU, PSP at about 0.7 AU, and STEREO-A at 0.9 AU. This will be an occasion for joint in situ studies of the properties of turbulence and dynamics of a solar wind stream between 0.5 and 1 AU.\n\nhttps://solar-mach.streamlit.app/?embedded=true&date=20210925&time=0000&coord_sys=0&plot_spirals=1&plot_sun_body_line=1&plot_trans=0&plot_markers=Numbers&long_offset=270&bodies=STEREO+A&bodies=Earth&bodies=BepiColombo&bodies=Parker+Solar+Probe&bodies=Solar+Orbiter&speeds=346&speeds=485&speeds=400&speeds=300&speeds=287&"
  },
  {
    "objectID": "index.html#trange-encounter-11-2022-02",
    "href": "index.html#trange-encounter-11-2022-02",
    "title": "Evolution of solar wind discontinuities in the inner heliosphere",
    "section": "Trange: Encounter 11, 2022-02",
    "text": "Trange: Encounter 11, 2022-02\n\nE11, C6, Q8, Q9 23–27 February, 2022. PSP approaches encounter E11 beginning with a trailing quadrature Q8 on 23 February, 2022, appearing on the east limb of the Sun from SO, before rapidly going through conjunction with STEREO-A and then SO and Earth (24 and 25 February, respectively) at perihe- lion with the Earth–Sun–STEREO-A angle ’40◦ and the Earth–"
  },
  {
    "objectID": "notebooks/00_notes.html",
    "href": "notebooks/00_notes.html",
    "title": "Notes",
    "section": "",
    "text": "import polars as pl\n\n\ndf = pl.read_csv('../data/psp_events.csv', try_parse_dates=True)\ndf.to_pandas()\n\n\n\nTable 1: PSP events\n\n\n\n\n\n\n\n\n\n\nEvent\nDistance (R_sun)\nTime\nNotes\n\n\n\n\n0\nE1\n35.6\n2018-11-06 03:27:00\nPerihelion\n\n\n1\nE2\n35.6\n2019-04-04 22:39:00\nPerihelion\n\n\n2\nE3\n35.6\n2019-09-01 17:50:00\nPerihelion\n\n\n3\nE4\n27.8\n2020-01-29 09:37:00\nPerihelion\n\n\n4\nE5\n27.8\n2020-06-07 08:23:00\nPerihelion\n\n\n5\nE6\n20.3\n2020-09-27 09:16:00\nPerihelion\n\n\n6\nE7\n20.3\n2021-01-17 17:40:00\nPerihelion\n\n\n7\nE8\n15.9\n2021-04-29 08:48:00\nPerihelion\n\n\n8\nE9\n15.9\n2021-08-09 19:11:00\nPerihelion\n\n\n9\nE10\n13.3\n2021-11-21 08:23:00\nPerihelion\n\n\n10\nE11\n13.3\n2022-02-25 15:38:00\nPerihelion\n\n\n11\nE12\n13.3\n2022-06-01 22:51:00\nPerihelion\n\n\n12\nE13\n13.3\n2022-09-06 06:04:00\nPerihelion\n\n\n13\nE14\n13.3\n2022-12-11 13:16:00\nPerihelion\n\n\n14\nE15\n13.3\n2023-03-17 20:30:00\nPerihelion\n\n\n15\nE16\n13.3\n2023-06-22 03:46:00\nPerihelion\n\n\n16\nE17\n11.4\n2023-09-27 23:28:00\nPerihelion\n\n\n17\nE18\n11.4\n2023-12-29 00:54:00\nPerihelion\n\n\n18\nE19\n11.4\n2024-03-30 02:20:00\nPerihelion\n\n\n19\nE20\n11.4\n2024-06-30 03:46:00\nPerihelion\n\n\n20\nE21\n11.4\n2024-09-30 05:13:00\nPerihelion\n\n\n21\nE22\n9.9\n2024-12-24 11:41:00\nPerihelion\n\n\n22\nE23\n9.9\n2025-03-22 22:25:00\nPerihelion\n\n\n23\nE24\n9.9\n2025-06-19 09:09:00\nPerihelion",
    "crumbs": [
      "Home",
      "Notebooks",
      "Notes"
    ]
  },
  {
    "objectID": "notebooks/01_psp_examples.html",
    "href": "notebooks/01_psp_examples.html",
    "title": "Examples of discontinuities observed by PSP",
    "section": "",
    "text": "::: {#cell-0 .cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=27}\n:::\nfrom discontinuitypy.core.pipeline import ids_finder\nfrom discontinuitypy.datasets import IDsDataset\nfrom discontinuitypy.utils.basic import resample\nimport polars as pl\nfrom beforerr.polars import pl_norm\n\nfrom sunpy.time import TimeRange\nfrom datetime import timedelta\nfrom space_analysis.utils.speasy import Variables\nstart = '2019-04-06T12:00'\nstart = '2019-04-07T01:00'\nend = '2019-04-07T12:00'\n\nearth_start = '2019-04-09'\nearth_end = '2019-04-14'\n\n# tau = timedelta(seconds=60)\ntau = timedelta(seconds=10)\nts = timedelta(seconds=1/264)\npsp_timerange = TimeRange(start, end)\ntimerange_earth = TimeRange(earth_start, earth_end)\ndef validate(timerange):\n    if isinstance(timerange, TimeRange):\n        return [timerange.start.to_string(), timerange.end.to_string()]\npsp_mag_data = Variables(\n    dataset=\"PSP_FLD_L2_MAG_RTN\",\n    parameters=[\"psp_fld_l2_mag_RTN\"],\n    timerange=validate(psp_timerange),\n)\npsp_ids_dataset = IDsDataset(\n    mag_data=psp_mag_data.to_polars(),\n    tau=tau,\n    ts=ts,\n)\npsp_ids_dataset.find_events()\n\n06-Feb-24 13:18:59 WARNING  06-Feb-24 13:18:59: UserWarning: Distributing &lt;class                      logger.py:205\n                            'pandas.core.frame.DataFrame'&gt; object. This may take some time.\npsp_ids_dataset.export(\"../data/psp_ids_dataset.parquet\")",
    "crumbs": [
      "Home",
      "Notebooks",
      "Examples of discontinuities observed by PSP"
    ]
  },
  {
    "objectID": "notebooks/01_psp_examples.html#examples-of-discontinuities-observed-by-psp",
    "href": "notebooks/01_psp_examples.html#examples-of-discontinuities-observed-by-psp",
    "title": "Examples of discontinuities observed by PSP",
    "section": "Examples of discontinuities observed by PSP",
    "text": "Examples of discontinuities observed by PSP\nouts = psp_ids_dataset.plot_candidates(plot_fit_data=True)\n\n2024-02-06 13:19:15.388 | INFO     | discontinuitypy.datasets:plot_candidates:93 - Candidates indices: [5, 94, 78, 132]",
    "crumbs": [
      "Home",
      "Notebooks",
      "Examples of discontinuities observed by PSP"
    ]
  },
  {
    "objectID": "notebooks/01_psp_examples.html#resampled-dataset",
    "href": "notebooks/01_psp_examples.html#resampled-dataset",
    "title": "Examples of discontinuities observed by PSP",
    "section": "Resampled dataset",
    "text": "Resampled dataset\nBy visually inspecting data, the most strong discontinuities kind of have time duration about 1-3 seconds. So it is reasonable to downsample the data to a lower frequency so that\n\nthe detection method is more robust, excluding very high frequency wave/noise?\nit is better to apply the derivative method to get the properties of the discontinuities.\nMatch Wind time resolution.\n\nOr we could fit the \\(B_l\\) to get the properties of the discontinuities.\n\nevery = timedelta(seconds=1/11)\nts = timedelta(seconds=1/11)\n\ndata_r = resample(psp_mag_data, every)\n\n\ncandidates_r = ids_finder(data_r, tau, ts)\n\n05-Feb-24 09:56:55 WARNING  05-Feb-24 09:56:55: DeprecationWarning: `pl.count()` is deprecated.       logger.py:205\n                            Please use `pl.len()` instead.                                                         \n                                                                                                                   \n\n\n\n                   WARNING  05-Feb-24 09:56:55: DeprecationWarning: `map_alias` is deprecated. It has logger.py:205\n                            been moved to `name.map`.                                                              \n                                                                                                                   \n\n\n\n                   WARNING  05-Feb-24 09:56:55: DeprecationWarning: `map_alias` is deprecated. It has logger.py:205\n                            been moved to `name.map`.                                                              \n                                                                                                                   \n\n\n\n                   WARNING  05-Feb-24 09:56:55: UserWarning: Distributing &lt;class                      logger.py:205\n                            'pandas.core.frame.DataFrame'&gt; object. This may take some time.                        \n                                                                                                                   \n\n\n\n\n\n\n\n\n\n\ndataset = \"PSP_SWP_SPI_SF00_L3_MOM\"\nparameters = [\"DENS\", \"VEL_RTN_SUN\", \"TEMP\", \"SUN_DIST\"]\n\n\npsp_plasma = Variables(\n    dataset=dataset, parameters=parameters, timerange=validate(psp_timerange)\n).get_data()\n\n05-Feb-24 09:56:56 WARNING  05-Feb-24 09:56:56: DeprecationWarning: parsing timezone aware datetimes  logger.py:205\n                            is deprecated; this will raise an error in the future                                  \n                                                                                                                   \n\n\n\n\nvec_cols = [\"Vx RTN\", \"Vy RTN\", \"Vz RTN\"]\n\npsp_plasma_r = (\n    psp_plasma.to_polars()\n    .pipe(resample, every=tau)\n    .with_columns(plasma_speed=pl_norm(vec_cols))\n    .rename(\n        {\n            \"Density\": \"plasma_density\",\n            \"Temperature\": \"plasma_temperature\",\n        }\n    )\n)\n\n\npsp_ids_dataset = IDsDataset(\n    candidates = candidates_r,\n    data = data_r,\n    plasma_data = psp_plasma_r,\n    vec_cols = vec_cols\n)\n\npsp_ids_dataset.update_candidates_with_plasma_data()\n\n05-Feb-24 09:57:13 WARNING  05-Feb-24 09:57:13: PendingDeprecationWarning: The `dims` argument has    logger.py:205\n                            been renamed to `dim`, and will be removed in the future. This renaming                \n                            is taking place throughout xarray over the next few releases.                          \n                                                                                                                   \n\n\n\n                   WARNING  05-Feb-24 09:57:13: PendingDeprecationWarning: The `dims` argument has    logger.py:205\n                            been renamed to `dim`, and will be removed in the future. This renaming                \n                            is taking place throughout xarray over the next few releases.                          \n                                                                                                                   \n\n\n\n                   WARNING  05-Feb-24 09:57:13: PendingDeprecationWarning: The `dims` argument has    logger.py:205\n                            been renamed to `dim`, and will be removed in the future. This renaming                \n                            is taking place throughout xarray over the next few releases.                          \n                                                                                                                   \n\n\n\n                   WARNING  05-Feb-24 09:57:13: DeprecationWarning: `nanoseconds` is deprecated. It   logger.py:205\n                            has been renamed to `total_nanoseconds`.                                               \n                                                                                                                   \n\n\n\n                   WARNING  05-Feb-24 09:57:13: DeprecationWarning: `nanoseconds` is deprecated. It   logger.py:205\n                            has been renamed to `total_nanoseconds`.                                               \n                                                                                                                   \n\n\n\n                   WARNING  05-Feb-24 09:57:13: DeprecationWarning: `nanoseconds` is deprecated. It   logger.py:205\n                            has been renamed to `total_nanoseconds`.                                               \n                                                                                                                   \n\n\n\n\ndef ids_filter(df: pl.DataFrame):\n    return df.filter(\n        pl.col('index_diff')&gt;1, # interested in strong discontinuities\n        pl.col('fit.stat.rsquared')&gt;0.9, # interested in good fits\n    )\n\nouts = psp_ids_dataset.plot_candidates(add_plasma_params=True, plot_fit_data=True)\n\n2024-02-05 09:57:21.134 | INFO     | discontinuitypy.datasets:plot_candidates:67 - Candidates indices: [100, 138, 20, 137]",
    "crumbs": [
      "Home",
      "Notebooks",
      "Examples of discontinuities observed by PSP"
    ]
  },
  {
    "objectID": "notebooks/01_psp_overview.html",
    "href": "notebooks/01_psp_overview.html",
    "title": "Overview of the event",
    "section": "",
    "text": "We are using PSP_SWP_SPI_SF00_L3_MOM dataset\npsp_start = '2019-04-07T01:00'\npsp_end = '2019-04-07T09:00'\n\nearth_start = '2019-04-09'\nearth_end = '2019-04-14'\n\nevery = timedelta(minutes=4)\npsp_timerange = TimeRange(psp_start, psp_end)\npsp_vec_cols = [f\"V{_} RTN\" for _ in [\"x\", \"y\", \"z\"]]\npsp_mag_cols = [f\"B{_} SC\" for _ in [\"x\", \"y\", \"z\"]]\n\nearth_timerange = TimeRange(earth_start, earth_end)\ndscovr_vec_cols = [f\"V{_} (GSE)\" for _ in [\"X\", \"Y\", \"Z\"]]\ndef validate(timerange):\n    if isinstance(timerange, TimeRange):\n        return [timerange.start.to_string(), timerange.end.to_string()]\ndataset = \"PSP_SWP_SPI_SF00_L3_MOM\"\nparameters = [\"DENS\", \"VEL_RTN_SUN\", \"TEMP\", \"MAGF_SC\", \"SUN_DIST\"]\npsp_plasma = Variables(\n    dataset=dataset, parameters=parameters, timerange=validate(psp_timerange)\n).get_data()",
    "crumbs": [
      "Home",
      "Notebooks",
      "Overview of the event"
    ]
  },
  {
    "objectID": "notebooks/01_psp_overview.html#radial-evolution-of-the-coronal-hole-high-speed-streams",
    "href": "notebooks/01_psp_overview.html#radial-evolution-of-the-coronal-hole-high-speed-streams",
    "title": "Overview of the event",
    "section": "Radial evolution of the coronal hole high-speed streams",
    "text": "Radial evolution of the coronal hole high-speed streams\nPerrone et al. (2019) used HELIOS observations to study the radial evolution of the solar wind in coronal hole high-speed streams. They found that The radial dependence of the proton number density, np, and the magnetic field, B, is given by\nThe radial dependence of the proton number density, np is\n\\[n_p = (2.4 ± 0.1)(R/R_0)^{−(1.96±0.07)} cm^{−3}\\]\n\\[B = (5.7 ± 0.2)(R/R_0)^{−(1.59±0.06)} nT\\]\nThe faster decrease of the magnetic than kinetic pressure is reﬂected in the radial proton plasma beta variation\n\\[β_p = P_k/P_B = (0.55 ± 0.04)(R/R_0)^{(0.4±0.1)}.\\]\nThe behaviour of the parallel proton plasma beta is similar\n\\[β_{‖} = (0.37 ± 0.03)(R/R_0)^{(0.8±0.1)}\\]\n\ndef plasma_r_evolution(\n    df: pl.DataFrame,\n    alpha_beta_r = 0.4,\n    alpha_beta_parallel_r = 0.9,\n    alpha_n = -2,\n    alpha_B = -1.63,\n    alpha_plasma_speed = 0,\n):\n    return df.with_columns(\n        plasma_speed_1AU = pl.col('plasma_speed') * (1 / pl.col(\"distance2sun\"))**alpha_plasma_speed,\n        n_1AU = pl.col('n') * (1 / pl.col(\"distance2sun\"))**alpha_n,\n        B_1AU = pl.col('B') * (1 / pl.col(\"distance2sun\"))**alpha_B,\n        beta_1AU = pl.col(\"beta\") * (1 / pl.col(\"distance2sun\"))**alpha_beta_r,\n        beta_parallel = pl.col(\"beta\") * (1 / pl.col(\"distance2sun\"))**alpha_beta_parallel_r,\n    )\n\n\nkm2au = u.km.to(u.AU)\n\n\ndef process_dscoevr(timerange):\n    timerange = validate(timerange)\n    # Load DSCOVR magnetic field and plasma data\n    dscovr_mag = Variables(\n        products=[\"cda/DSCOVR_H0_MAG/B1F1\"], timerange=timerange\n    ).get_data()\n\n    dscovr_plasma = Variables(\n        dataset=\"DSCOVR_H1_FC\",\n        parameters=[\"Np\", \"V_GSE\", \"THERMAL_TEMP\"],\n        timerange=timerange,\n    ).get_data()\n    \n    dscovr_df = (\n        dscovr_plasma.to_polars().pipe(resample, every)\n        .sort(\"time\")\n        .join_asof(dscovr_mag.to_polars().pipe(resample, every).sort(\"time\"), on=\"time\")\n        .with_columns(\n            plasma_speed=pl_norm(dscovr_vec_cols),\n        )\n        .rename(\n            {   \n                \"Ion N\": \"n\",\n                \"Temperature\": \"T\",\n            }\n        )\n        .collect()\n        .pipe(df_beta, T_unit = u.K)\n        .pipe(df_Alfven_speed)\n        .with_columns(\n            plasma_speed_over_Alfven_speed=pl.col(\"plasma_speed\") / pl.col(\"Alfven_speed\"),\n        )\n    )\n    return dscovr_df\n\n\nfrom copy import deepcopy\n\n\ndscovr_df_previous = process_dscoevr(deepcopy(earth_timerange).previous())\ndscovr_df = process_dscoevr(earth_timerange)\ndscovr_df_next = process_dscoevr(deepcopy(earth_timerange).next())\n\n\npsp_plasma_r = (\n    psp_plasma.to_polars().pipe(resample, every)\n    .with_columns(\n        B=pl_norm(psp_mag_cols),\n        plasma_speed = pl_norm(psp_vec_cols),\n        distance2sun = pl.col('Sun Distance') * km2au,\n    )\n    .rename(\n        {\n            \"Density\": \"n\",\n            \"Temperature\": \"T\",\n        }\n    )\n    .collect()\n    .pipe(df_beta)\n    .pipe(plasma_r_evolution)\n    .pipe(df_Alfven_speed)\n    .pipe(df_Alfven_speed, B = \"B_1AU\", n = \"n_1AU\", col_name = \"Alfven_speed_1AU\")\n    .with_columns(\n        plasma_speed_over_Alfven_speed = pl.col(\"plasma_speed\") / pl.col(\"Alfven_speed\"),\n        plasma_speed_over_Alfven_speed_1AU = pl.col(\"plasma_speed_1AU\") / pl.col(\"Alfven_speed_1AU\"),\n    )\n)\n\n\nplot = psp_plasma_r.plot(x=\"time\", y=[\"plasma_speed\", \"beta\", \"Alfven_speed\", \"plasma_speed_over_Alfven_speed\"], subplots=True, shared_axes=False).cols(1)\n\nplot_1AU = psp_plasma_r.plot(x=\"time\", y=[\"plasma_speed_1AU\", \"beta_1AU\", \"Alfven_speed_1AU\", \"plasma_speed_over_Alfven_speed_1AU\"], subplots=True, shared_axes=False).cols(1)\n\nplot + plot_1AU\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n  \n\n\n\n\n\nimport hvplot.polars  # noqa\nimport holoviews as hv\nhv.archive.auto()\n\n\n\n\nAutomatic capture is now enabled. [2024-02-04 20:52:05]\n\n\n\nhvplot.extension('bokeh', 'matplotlib')\nhvplot.output(backend='matplotlib', fig='svg')\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\ndef compare_df(df1, df2):\n    df1_plot = df1.plot.scatter(\n        x=\"beta\", y=\"plasma_speed_over_Alfven_speed\", label=\"PSP\"\n    ) * df1.plot.scatter(\n        x=\"beta_1AU\",\n        y=\"plasma_speed_over_Alfven_speed_1AU\",\n        label=\"PSP (1AU predicted)\",\n    )\n\n    df2_plot = df2.plot.scatter(\n        x=\"beta\",\n        y=\"plasma_speed_over_Alfven_speed\",\n        label=\"DSCOVR\",\n        alpha=0.2,\n    )\n\n    xlabel = \"Plasma beta\"\n    # ylabel=r\"$v_i$ / $v_A$\"\n    ylabel = \"Plasma speed over Alfven speed\"\n    title = \"Plasma speed over Alfven speed vs plasma beta\"\n\n    return (df2_plot * df1_plot).opts(xlabel=xlabel, ylabel=ylabel, logx=True, logy=True)\n\n\nfig = compare_df(psp_plasma_r, dscovr_df_previous).opts(title=\"Previous Period\")\nhvplot.save(fig, \"../figures/evolution/plasma-adiabatic-evolution-previous.svg\")\n\n\nfig = compare_df(psp_plasma_r, dscovr_df).opts(title=\"Current Period\")\nhvplot.save(fig, \"../figures/evolution/plasma-adiabatic-evolution.svg\")\n\n\nfig = compare_df(psp_plasma_r, dscovr_df_next).opts(title=\"Next Period\")\nhvplot.save(fig, \"../figures/evolution/plasma-adiabatic-evolution-next.svg\")",
    "crumbs": [
      "Home",
      "Notebooks",
      "Overview of the event"
    ]
  },
  {
    "objectID": "notebooks/02_psp_events.html",
    "href": "notebooks/02_psp_events.html",
    "title": "",
    "section": "",
    "text": "::: {#cell-0 .cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=1}\n:::\nfrom discontinuitypy.datasets import IDsDataset\nfrom discontinuitypy.utils.basic import resample\nfrom beforerr.polars import pl_norm\n\nfrom sunpy.time import TimeRange\nfrom datetime import timedelta\nfrom space_analysis.utils.speasy import Variables\n\n06-Feb-24 15:49:16 WARNING  06-Feb-24 15:49:16: UserWarning: Traceback (most recent call last):       logger.py:205\n                              File                                                                                 \n                            \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-package              \n                            s/pdpipe/__init__.py\", line 85, in &lt;module&gt;                                            \n                                from . import skintegrate                                                          \n                              File                                                                                 \n                            \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-package              \n                            s/pdpipe/skintegrate.py\", line 20, in &lt;module&gt;                                         \n                                from sklearn.base import BaseEstimator                                             \n                            ModuleNotFoundError: No module named 'sklearn'                                         \n                                                                                                                   \n                                                                                                                   \n\n\n\n                   WARNING  06-Feb-24 15:49:16: UserWarning: pdpipe: Scikit-learn or skutil import    logger.py:205\n                            failed. Scikit-learn-dependent pipeline stages will not be loaded.                     \n                                                                                                                   \n\n\n\n                   WARNING  06-Feb-24 15:49:16: UserWarning: Traceback (most recent call last):       logger.py:205\n                              File                                                                                 \n                            \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-package              \n                            s/pdpipe/__init__.py\", line 105, in &lt;module&gt;                                           \n                                from . import nltk_stages                                                          \n                              File                                                                                 \n                            \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-package              \n                            s/pdpipe/nltk_stages.py\", line 19, in &lt;module&gt;                                         \n                                import nltk                                                                        \n                            ModuleNotFoundError: No module named 'nltk'                                            \n                                                                                                                   \n                                                                                                                   \n\n\n\n                   WARNING  06-Feb-24 15:49:16: UserWarning: pdpipe: nltk import failed.              logger.py:205\n                            nltk-dependent  pipeline stages will not be loaded.\nstart = '2019-04-06T12:00'\nstart = '2019-04-07T01:00'\nend = '2019-04-07T12:00'\n\nearth_start = '2019-04-09'\nearth_end = '2019-04-12'\n\ntau = timedelta(seconds=10)\nts = timedelta(seconds=1/264)\npsp_timerange = TimeRange(start, end)\ntimerange_earth = TimeRange(earth_start, earth_end)\ndef validate(timerange):\n    if isinstance(timerange, TimeRange):\n        return [timerange.start.to_string(), timerange.end.to_string()]\npsp_mag_data = Variables(\n    dataset=\"PSP_FLD_L2_MAG_RTN\",\n    parameters=[\"psp_fld_l2_mag_RTN\"],\n    timerange=validate(psp_timerange),\n).to_polars()\nPSP plasma data\ndataset = \"PSP_SWP_SPI_SF00_L3_MOM\"\nparameters = [\"DENS\", \"VEL_RTN_SUN\", \"TEMP\", \"SUN_DIST\"]\nvec_cols = [\"Vx RTN\", \"Vy RTN\", \"Vz RTN\"]\n\npsp_plasma = (\n    Variables(dataset=dataset, parameters=parameters, timerange=validate(psp_timerange))\n    .to_polars()\n    .with_columns(plasma_speed=pl_norm(vec_cols))\n    .rename(\n        {\n            \"Density\": \"plasma_density\",\n            \"Temperature\": \"plasma_temperature\",\n        }\n    )\n)\n\npsp_plasma_tau = psp_plasma.pipe(resample, every=tau)\npsp_ids_dataset = (\n    IDsDataset(\n        mag_data=psp_mag_data,\n        plasma_data=psp_plasma_tau,\n        tau=tau,\n        ts=ts,\n        vec_cols=vec_cols,\n    )\n    .find_events()\n    .update_candidates_with_plasma_data()\n    .export(\"../data/psp_ids_dataset.arrow\")\n)\n\n06-Feb-24 16:09:48 WARNING  06-Feb-24 16:09:48: UserWarning: Distributing &lt;class                      logger.py:205\n                            'pandas.core.frame.DataFrame'&gt; object. This may take some time.\n# Resampled dataset\n\nts = timedelta(seconds=1 / 11)\n\npsp_mag_data_r = psp_mag_data.pipe(resample, every=ts)\npsp_ids_dataset_r = (\n    IDsDataset(\n        mag_data=psp_mag_data_r,\n        plasma_data=psp_plasma_tau,\n        tau=tau,\n        ts=ts,\n        vec_cols=vec_cols,\n    )\n    .find_events()\n    .update_candidates_with_plasma_data()\n    .export(\"../data/psp_ids_dataset_r.arrow\")\n)\n\n06-Feb-24 16:09:35 WARNING  06-Feb-24 16:09:35: UserWarning: Distributing &lt;class                      logger.py:205\n                            'pandas.core.frame.DataFrame'&gt; object. This may take some time.",
    "crumbs": [
      "Home",
      "Notebooks",
      "Wind dataset"
    ]
  },
  {
    "objectID": "notebooks/02_psp_events.html#wind-dataset",
    "href": "notebooks/02_psp_events.html#wind-dataset",
    "title": "",
    "section": "Wind dataset",
    "text": "Wind dataset\n\nts = timedelta(seconds=1 / 11)\ntau = timedelta(seconds=30)\n\nwind_vec_cols = [\"VX (GSM)\", \"VY (GSM)\", \"VZ (GSM)\"]\n\n\nwind_mag_data = Variables(\n    dataset=\"WI_H2_MFI\",\n    parameters=[\"BGSM\"],\n    timerange=validate(timerange_earth),\n).to_polars()\n\nwind_plasma_data = (\n    Variables(\n        dataset=\"WI_K0_SWE\",\n        parameters=[\"V_GSM\", \"Np\"],\n        timerange=validate(timerange_earth),\n    )\n    .to_polars()\n    .with_columns(plasma_speed=pl_norm(wind_vec_cols))\n    .rename(\n        {\n            \"Ion Np\": \"plasma_density\",\n        }\n    )\n)\n\nwind_ids_dataset = (\n    IDsDataset(\n        mag_data=wind_mag_data,\n        plasma_data=wind_plasma_data,\n        tau=tau,\n        ts=ts,\n        vec_cols=wind_vec_cols,\n    )\n    .find_events()\n    .update_candidates_with_plasma_data()\n    .export(\"../data/wind_ids_dataset_r.arrow\")\n)\n\n06-Feb-24 17:02:22 WARNING  06-Feb-24 17:02:22: UserWarning: Distributing &lt;class                      logger.py:205\n                            'pandas.core.frame.DataFrame'&gt; object. This may take some time.",
    "crumbs": [
      "Home",
      "Notebooks",
      "Wind dataset"
    ]
  }
]